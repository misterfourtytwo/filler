name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.1'
        channel: 'stable'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          build
        key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml') }}
        restore-keys: |
          ${{ runner.os }}-flutter-

    - name: Get dependencies
      run: flutter pub get

    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .

    - name: Analyze project source
      run: dart analyze --fatal-warnings

    - name: Run tests
      run: flutter test

    - name: Build web app
      run: |
        flutter build web \
          --release \
          --dart-define=FLUTTER_WEB_USE_SKIA=true \
          --tree-shake-icons \
          --base-href=/filler/

    - name: Create .nojekyll file
      run: touch build/web/.nojekyll

    - name: Copy MIME type configuration files
      run: |
        if [ -f "web/.htaccess" ]; then
          cp web/.htaccess build/web/.htaccess
          echo "Copied .htaccess for MIME type configuration"
        fi
        if [ -f "web/_headers" ]; then
          cp web/_headers build/web/_headers
          echo "Copied _headers for GitHub Pages MIME type configuration"
        fi
        if [ -f "web/dummy-worker.js" ]; then
          cp web/dummy-worker.js build/web/dummy-worker.js
          echo "Copied dummy-worker.js for Drift WASM compatibility"
        fi

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build/web
        cname: false